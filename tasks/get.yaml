---
# First, try to get the information from the sandbox API using uuid and Placement
- when: sandbox_api_login_token | default("") != ""
  block:
    - include_tasks: sandbox_api_login.yaml
    - include_tasks: sandbox_api_get.yaml

# If no placement was found, try compatibility mode (legacy), query dynamoDB
# TODO: remove later
# (when everything is using the sandbox-api and all services have a Placement in DB)
- when: >-
    r_get_placement.status | default(0, true) != 200
    and sandbox_name is not defined
    and pool_manager_aws_access_key_id | default('', true) != ''
  include_tasks: legacy_get.yaml

# If no sandbox associated, book a new one using the Sandbox API
# Run book only if the action is 'provision'
- when: >-
    anarchy_action_config_name == 'provision'
    and r_get_placement.status | default(0, true) != 200
    and sandbox_name is not defined
    and sandbox_api_login_token | default("") != ""
  include_tasks: sandbox_api_book.yaml

# Keep this in case sandbox_api_token is not defined
# TODO: remove later
- when:
    - anarchy_action_config_name == 'provision'
    - sandbox_name is not defined
    - pool_manager_aws_access_key_id | default('', true) != ''
  include_tasks: legacy_book.yaml
